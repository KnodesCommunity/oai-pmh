#! /usr/bin/env node
'use strict';

const _ = require('lodash');
const co = require('co');
const program = require('commander');

const oaiPmhModule = require('../');
const pkg = require('../package.json');

program
  .version(pkg.version);

program
  .command('list-identifiers <baseUrl>')
  .option('-p, --metadata-prefix <prefix>')
  .option('-f, --from <DATE>', 'from date YYYY-MM-DD or ISO8601')
  .option('-u, --until <DATE>', 'from date YYYY-MM-DD or ISO8601')
  .option('-s, --set <SETSPEC>', 'set specifier, e.g., "math"')
  .action((baseUrl, _options) => {
    try {
      co(function* _listIdentifiers() {
        const options = _.pick(_options, 'metadataPrefix', 'from', 'until', 'set');
        const oaiPmh = new oaiPmhModule.OaiPmh(baseUrl);

        for (const identifierPromise of oaiPmh.listIdentifiers(options)) {
          const identifier = yield identifierPromise;
          process.stdout.write(`${JSON.stringify(identifier)}\n`);
        }
      });
    } catch (err) {
      process.stderr.write(`${err.message}\n`);
      process.exit(1);
    }
  });

program.parse(process.argv);
